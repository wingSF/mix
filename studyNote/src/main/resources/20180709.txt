Java面试通关秘籍
1.面向对象的特征：继承、封装和多态
    继承(inheritance):
        利:
            该关系用来描述子类与父类之间的关系，使子类对象拥有父类对象的（非private）protected、public的方法与成员变量，通过继承可以使子类拥有与父类的行为
            父类最好是一个抽象的概念，宏观上代表一类事物，子类则比父类更加具体，通俗的表达方式  is-a   子类对象  is   a  父类对象   ex：兔子是个动物
            继承关键字extends，所有没有继承关键字的类默认继承java.lang.Object类
            继承是单继承，一个子类只能有一个父类
            this指向当前对象的引用;super关键字可以实现对父类成员的访问，指向一个对象还是类，什么机制呢？
            被final关键字修饰的类，不能被继承
        弊:
            继承提高了类之间的耦合性。对父类的修改会影响所有的子类，代价太大
            不从事物的本质出发，为了某种功能而继承，导致代码可维护性变差

    封装(encapsulation):
        将抽象性函式接口的实现细节部分包装、隐藏起来的方法。
        ex:类
            防止该类的代码和数据被外部定义的代码随机访问
            要访问该类的代码和数据，必须通过严格的接口控制
            我们可以修改自己类内的代码，而不用去修改调用我们代码的代码片段
            易于维护和理解
            减少耦合
            隐藏信息，实现细节

    多态(polymorphism):
        多态是面向对象编程语言的一种特性，讲子父类关系解耦，接口实现关系解耦，在编码的时候可以使用同一的接口或者抽象父类
        在实际运行的时候在通过动态绑定为具体的对象类型。多态又称动态绑定、运行时绑定、后期绑定





